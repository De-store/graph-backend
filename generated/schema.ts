// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class ExampleEntity extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save ExampleEntity entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save ExampleEntity entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("ExampleEntity", id.toString(), this);
  }

  static load(id: string): ExampleEntity | null {
    return store.get("ExampleEntity", id) as ExampleEntity | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get count(): BigInt {
    let value = this.get("count");
    return value.toBigInt();
  }

  set count(value: BigInt) {
    this.set("count", Value.fromBigInt(value));
  }

  get Owner(): Bytes {
    let value = this.get("Owner");
    return value.toBytes();
  }

  set Owner(value: Bytes) {
    this.set("Owner", Value.fromBytes(value));
  }

  get RegisteredApp_appId(): Bytes {
    let value = this.get("RegisteredApp_appId");
    return value.toBytes();
  }

  set RegisteredApp_appId(value: Bytes) {
    this.set("RegisteredApp_appId", Value.fromBytes(value));
  }

  get RegisteredApp_name(): string {
    let value = this.get("RegisteredApp_name");
    return value.toString();
  }

  set RegisteredApp_name(value: string) {
    this.set("RegisteredApp_name", Value.fromString(value));
  }

  get RegisteredApp_tagLine(): string {
    let value = this.get("RegisteredApp_tagLine");
    return value.toString();
  }

  set RegisteredApp_tagLine(value: string) {
    this.set("RegisteredApp_tagLine", Value.fromString(value));
  }

  get RegisteredApp_description(): string {
    let value = this.get("RegisteredApp_description");
    return value.toString();
  }

  set RegisteredApp_description(value: string) {
    this.set("RegisteredApp_description", Value.fromString(value));
  }

  get RegisteredApp_icon(): string {
    let value = this.get("RegisteredApp_icon");
    return value.toString();
  }

  set RegisteredApp_icon(value: string) {
    this.set("RegisteredApp_icon", Value.fromString(value));
  }

  get RegisteredApp_apkFile(): string {
    let value = this.get("RegisteredApp_apkFile");
    return value.toString();
  }

  set RegisteredApp_apkFile(value: string) {
    this.set("RegisteredApp_apkFile", Value.fromString(value));
  }

  get RegisteredApp_iosFile(): string {
    let value = this.get("RegisteredApp_iosFile");
    return value.toString();
  }

  set RegisteredApp_iosFile(value: string) {
    this.set("RegisteredApp_iosFile", Value.fromString(value));
  }

  get RegisteredApp_images(): Array<string> | null {
    let value = this.get("RegisteredApp_images");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toStringArray();
    }
  }

  set RegisteredApp_images(value: Array<string> | null) {
    if (value === null) {
      this.unset("RegisteredApp_images");
    } else {
      this.set(
        "RegisteredApp_images",
        Value.fromStringArray(value as Array<string>)
      );
    }
  }
}
